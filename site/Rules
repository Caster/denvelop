#!/usr/bin/env ruby

# A few helpful tips about the Rules file:
#
# * The string given to #compile and #route are matching patterns for
#   identifiers--not for paths. Therefore, you can’t match on extension.
#
# * The order of rules is important: for each item, only the first matching
#   rule is applied.
#
# * Item identifiers start and end with a slash (e.g. “/about/” for the file
#   “content/about.html”). To select all children, grandchildren, … of an
#   item, use the pattern “/about/*/”; “/about/*” will also select the parent,
#   because “*” matches zero or more characters.

#
# ---- PREPROCESS RULES --------------------------------------------------------
#

preprocess do
    items.select{ |item| item[:title] != nil }.
        each{ |item|
            item[:title_full] = 'Denvelop - ' + item[:title]
            splitId = item.identifier.chop.split('/')
            joinId = (splitId[2] == default_language ?
                      splitId[3..-1] : splitId[2..-1]).join('/')
            item[:url] = (joinId.length > 0 ? '/' : '') + joinId + '/'
        }
end

#
# ---- COMPILE RULES -----------------------------------------------------------
#

compile '/img/*/' do
    if item[:extension] == 'ipe'
        filter :ipe
    end
end

compile '/items/*/' do
    filter :erb
    layout 'default'
    filter :tidy
    filter :relativize_paths, :type => :html
end

compile '/items/*/', :rep => :json do
    filter :erb
    layout 'json'
    filter :relativize_paths, :type => :css
end

compile '/js/*/' do
    filter :erb
    if item[:yuiCompress]
        filter :yui_compressor, :type => :js
    end
end

compile '/less/*/' do
    if item.identifier.chop.split('/').last == 'denvelop'
        filter :less
        if item[:yuiCompress]
            filter :yui_compressor, :type => :css
        end
        filter :relativize_paths, :type => :css
    else
        nil
    end
end

#
# ---- ROUTING RULES -----------------------------------------------------------
#

route '/img/*/' do
    if item[:extension] == 'ipe'
        item.identifier.chop + '.svg'
    else
        item.identifier.chop + '.' + item[:extension]
    end
end

route '/items/*/' do
    item[:url] + 'index.html'
end

route '/items/*/', :rep => :json do
    item[:url] + 'page.json'
end

route '/js/*/' do
    item.identifier.chop + '.js'
end

route '/less/*/' do
    if item.identifier.chop.split('/').last == 'denvelop'
        item.identifier.chop.gsub('less', 'css') + '.css'
    else
        nil
    end
end

#
# ---- LAYOUT RULES ------------------------------------------------------------
#

layout '*', :erb
